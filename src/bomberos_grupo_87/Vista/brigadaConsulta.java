/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bomberos_grupo_87.Vista;

import bomberos_grupo_87.AccesoADatos.BrigadaData;
import bomberos_grupo_87.Entidades.Bombero;
import bomberos_grupo_87.Entidades.Brigada;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Discar
 */
public class brigadaConsulta extends javax.swing.JInternalFrame {
    private DefaultTableModel modelo = new DefaultTableModel(){
        @Override
        public boolean isCellEditable(int f, int c){
            return false;
        }
    }; 
    
    private DefaultTableModel modelo2 = new DefaultTableModel(){
        @Override
        public boolean isCellEditable(int f, int c){
            return false;
        }
    }; 
    
    /**
     * Creates new form brigadaConsulta
     */
    public brigadaConsulta() {
        initComponents();
        modeloTabla();
        modeloTabla2();
        cargarCombo();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttong = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaBrigadas = new javax.swing.JTable();
        asignadasB = new javax.swing.JRadioButton();
        libresB = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jComboBrigadas = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaBomberos = new javax.swing.JTable();

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CONSULTA DE BRIGADAS");

        tablaBrigadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaBrigadas);

        asignadasB.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        asignadasB.setText("BRIGADAS ASIGNADAS");
        asignadasB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asignadasBActionPerformed(evt);
            }
        });

        libresB.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        libresB.setText("BRIGADAS LIBRES");
        libresB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                libresBActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel2.setText("Bomberos de la Brigada: ");

        jComboBrigadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBrigadasActionPerformed(evt);
            }
        });

        tablaBomberos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tablaBomberos);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 226, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(227, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(asignadasB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(libresB)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBrigadas, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(asignadasB)
                    .addComponent(libresB))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBrigadas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void asignadasBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asignadasBActionPerformed
        // TODO add your handling code here:
        if(asignadasB.isSelected()){
         
         borrarTabla();
         
         cargarBrigadaAsignada();
     
     }else if (libresB.isSelected()){ 
         
         borrarTabla();
         
         cargarBrigadaLibres();
         
     }
        
    }//GEN-LAST:event_asignadasBActionPerformed

    private void libresBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_libresBActionPerformed
        // TODO add your handling code here:
        buttong.add(libresB);
        buttong.add(asignadasB);
        
        if(asignadasB.isSelected()){
         
         borrarTabla();
         
         cargarBrigadaAsignada();
     
     }else if (libresB.isSelected()){ 
         
         borrarTabla();
         
         cargarBrigadaLibres();
         
     }
    }//GEN-LAST:event_libresBActionPerformed

    private void jComboBrigadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBrigadasActionPerformed
        // TODO add your handling code here:
        borrarTabla2();
        Bombero bombero = new Bombero();
        BrigadaData BD = new BrigadaData();
        Brigada brig = new Brigada();
        brig =(Brigada) jComboBrigadas.getSelectedItem();
        int codBom= brig.getCodBrigada();
        for (Bombero bomb : BD.listarBomberosPorBrigada(codBom)) {
            modelo2.addRow(new Object[]{bomb.getCodBombero(),bomb.getNombre_ape(),bomb.getDni(),bomb.getFecha_nac(),bomb.getGrupo_sang()});
        }
    }//GEN-LAST:event_jComboBrigadasActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton asignadasB;
    private javax.swing.ButtonGroup buttong;
    private javax.swing.JComboBox<Brigada> jComboBrigadas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton libresB;
    private javax.swing.JTable tablaBomberos;
    private javax.swing.JTable tablaBrigadas;
    // End of variables declaration//GEN-END:variables
    public void modeloTabla(){
    modelo.addColumn("Codigo Brigada");
    modelo.addColumn("Nombre de Brigada");
    modelo.addColumn("Especialidad");
    modelo.addColumn("Cuartel");
    tablaBrigadas.setModel(modelo);
}
    
    public void modeloTabla2(){
        modelo2.addColumn("Codigo Bombero");
        modelo2.addColumn("Nombre y Apellido");
        modelo2.addColumn("DNI");
        modelo2.addColumn("Fecha de Nacimiento");
        modelo2.addColumn("Grupo Sanguíneo");
        tablaBomberos.setModel(modelo2);    
    }

    public void borrarTabla(){
   int x = tablaBrigadas.getRowCount()-1;
    for (int i = x; i >= 0; i--) {
        modelo.removeRow(i);
    }
    }
    
    public void borrarTabla2(){
   int x = tablaBomberos.getRowCount()-1;
    for (int i = x; i >= 0; i--) {
        modelo2.removeRow(i);
    }
    }

    public void cargarBrigadaAsignada(){
        BrigadaData bri = new BrigadaData();
        for (Brigada brigada : bri.brigadaAsignada()) {
            modelo.addRow(new Object[]{brigada.getCodBrigada(),brigada.getNombre_br(), brigada.getEspecialidad(), brigada.getCuartel().getNombre_cuartel()});
        }
    }
    
    public void cargarBrigadaLibres(){
        BrigadaData bri = new BrigadaData();
        for (Brigada brigada : bri.brigadaLibre()) {
            modelo.addRow(new Object[]{brigada.getCodBrigada(),brigada.getNombre_br(), brigada.getEspecialidad(), brigada.getCuartel().getNombre_cuartel()});
        }
    }
    
    public void cargarListaBrigadas(int codBri){
        BrigadaData bri = new BrigadaData();
        bri.listarBomberosPorBrigada(codBri);
        for (Bombero bombero : bri.listarBomberosPorBrigada(codBri)) {
            modelo2.addRow(new Object[]{});
        }
    }
    
    public void cargarCombo(){
        BrigadaData bri = new BrigadaData();
        for (Brigada briga : bri.listarBrigadas()) {
            jComboBrigadas.addItem(briga);
        }
    }

}
